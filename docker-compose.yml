version: '3'
services:
  gateway:
    image: conduktor
    restart: always
    depends_on:
    - schema-registry
    ports:
    - "6969:6975"
    - "8888:8888"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_SEND_BUFFER_BYTES: 1300000
      KAFKA_RECEIVE_BUFFER_BYTES: 1300000
      CONFIGURATION_FILE_PATH: /app/application.yaml
      # CLASSPATH: /app/plugins/logger-interceptor-0.5.0-SNAPSHOT.jar

  kaf:
    image: kaf
    command: sleep 360000

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    restart: always
    depends_on:
    - kafka
    ports:
    - "8091:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka:9092'
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
    healthcheck:
      test: [ "CMD", "curl", "--fail", "localhost:8081" ]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: "confluentinc/cp-zookeeper:latest"
    restart: always
    ports:
      - "22181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: "confluentinc/cp-kafka:latest"
    depends_on:
      - zookeeper
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: 1
      KAFKA_BROKER_ID: 1

  create-topics:
    image: confluentinc/cp-kafka:latest
    restart: on-failure
    depends_on:
    - kafka
    - schema-registry-kafka
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       cub kafka-ready -b kafka:9092 1 40 && \
                       echo Waiting for Confluent Schema Registry to be ready... && \
                       cub sr-ready schema-registry 8081 40 && \
                       echo Waiting a few seconds for topic creation to finish... && \
                       sleep 5 && \
                       kafka-topics --bootstrap-server kafka:9092 --create --topic customers --partitions 1 --replication-factor 1 --if-not-exists && \
                       sleep 3'"
